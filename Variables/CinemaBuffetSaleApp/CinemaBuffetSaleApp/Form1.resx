<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AEREAREQBERAEREAREQBERAEREAREQBERAP/2Q==
</value>
  </data>
</root>